# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        def calculator():
  while True:
    # Get the user's input
    num1 = input("Enter the first number: ")
    num2 = input("Enter the second number: ")
    operator = input("Enter the operator (+, -, *, /): ")
    
    # Check if the user has entered a valid operator
    if operator == '+':
      result = float(num1) + float(num2)
    elif operator == '-':
      result = float(num1) - float(num2)
    elif operator == '*':
      result = float(num1) * float(num2)
    elif operator == '/':
      result = float(num1) / float(num2)
    else:
      result = "Invalid operator"
    
    # Print the result
    print(result)
    
    # Ask the user if they want to continue
    choice = input("Do you want to continue? (Y/N) ")
    if choice.lower() == 'n':
      break

# Run the calculator
calculator()

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
